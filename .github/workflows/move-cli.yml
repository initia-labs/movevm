name: Publish the new version of initia-move-cli

on:
  workflow_run:
    workflows: ["Release rust libmovevm"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g. v0.1.0)'
        required: true

jobs:
  linux-build:
    if: |
      (github.event_name == 'workflow_run' && startsWith(github.event.workflow_run.head_branch, 'v')) ||
      (github.event_name == 'workflow_dispatch' && startsWith(github.event.inputs.version, 'v'))
    name: Build on Linux (cross)
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
        include:
          - target: x86_64-unknown-linux-gnu
            suffix: linux-amd64
          - target: aarch64-unknown-linux-gnu
            suffix: linux-arm64
    steps:
      - uses: actions/checkout@v4

      - name: Install cross
        run: cargo install cross

      - name: Build binary
        run: |
          CARGO_PKG_VERSION=${{ github.event.inputs.version || github.event.workflow_run.head_branch }} cross build --release --target ${{ matrix.target }}

      - name: Create tar.gz
        run: |
          cd target/${{ matrix.target }}/release
          tar -czvf ../../../initia-move-cli-${{ github.event.inputs.version || github.event.workflow_run.head_branch }}-${{ matrix.suffix }}.tar.gz initia-move-cli

      - name: Upload artifact
        uses: actions/upload-artifact@v4 
        with:
          name: ${{ matrix.target }}-build
          path: initia-move-cli-*-${{ matrix.suffix }}.tar.gz

  macos-build:
    if: |
      (github.event_name == 'workflow_run' && startsWith(github.event.workflow_run.head_branch, 'v')) ||
      (github.event_name == 'workflow_dispatch' && startsWith(github.event.inputs.version, 'v'))
    name: Build on macOS (native)
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
        include:
          - target: x86_64-apple-darwin
            suffix: darwin-amd64
          - target: aarch64-apple-darwin
            suffix: darwin-arm64
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build binary
        run: |
          CARGO_PKG_VERSION=${{ github.event.inputs.version || github.event.workflow_run.head_branch }} cargo build --release --target ${{ matrix.target }} --bin initia-move-cli

      - name: Create tar.gz
        run: |
          cd target/${{ matrix.target }}/release
          tar -czvf ../../../initia-move-cli-${{ github.event.inputs.version || github.event.workflow_run.head_branch }}-${{ matrix.suffix }}.tar.gz initia-move-cli

      - name: Upload artifact
        uses: actions/upload-artifact@v4 
        with:
          name: ${{ matrix.target }}-build
          path: initia-move-cli-*-${{ matrix.suffix }}.tar.gz

  create-release:
    needs: [linux-build, macos-build]
    if: ${{github.event.workflow_run.head_branch}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: '*-build'
          merge-multiple: true
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version || github.event.workflow_run.head_branch }}
          files: initia-move-cli-*.tar.gz

  docker-build-push:
    needs: [linux-build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Linux AMD64 artifact
        uses: actions/download-artifact@v4
        with:
          name: x86_64-unknown-linux-gnu-build
          path: tools/initia-move-cli

      - name: Extract binary
        run: |
          cd tools/initia-move-cli
          tar -xzvf initia-move-cli-*.tar.gz
          rm initia-move-cli-*.tar.gz

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: tools/initia-move-cli
          file: tools/initia-move-cli/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/initia-move-cli:latest
            ghcr.io/${{ github.repository_owner }}/initia-move-cli:${{ github.event.inputs.version || github.event.workflow_run.head_branch }}